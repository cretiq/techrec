{
  "config": {
    "configFile": "/Users/filipmellqvist/CursorProjects/techrec/playwright.config.ts",
    "rootDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "/Users/filipmellqvist/CursorProjects/techrec/tests/global-setup.ts",
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "list",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/results.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/filipmellqvist/CursorProjects/techrec/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 90000
      },
      {
        "outputDir": "/Users/filipmellqvist/CursorProjects/techrec/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 90000
      },
      {
        "outputDir": "/Users/filipmellqvist/CursorProjects/techrec/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 90000
      },
      {
        "outputDir": "/Users/filipmellqvist/CursorProjects/techrec/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 90000
      },
      {
        "outputDir": "/Users/filipmellqvist/CursorProjects/techrec/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/filipmellqvist/CursorProjects/techrec/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 90000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.53.2",
    "workers": 6,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3000",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "e2e/architecture/single-source-truth-verification.spec.ts",
      "file": "e2e/architecture/single-source-truth-verification.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Single Source of Truth Architecture - E2E Verification",
          "file": "e2e/architecture/single-source-truth-verification.spec.ts",
          "line": 5,
          "column": 6,
          "specs": [
            {
              "title": "should verify complete architectural migration: upload ‚Üí proper tables ‚Üí UI display ‚Üí save",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 90000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 33458,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üèóÔ∏è Starting Single Source of Truth architecture verification...\n"
                        },
                        {
                          "text": "üìù Step 1: Authenticating as experienced developer...\n"
                        },
                        {
                          "text": "‚úÖ Authentication completed\n"
                        },
                        {
                          "text": "üìù Step 2: Ensuring clean test environment...\n"
                        },
                        {
                          "text": "‚úÖ CV management page loaded\n"
                        },
                        {
                          "text": "üìù Step 3: Setting up comprehensive API monitoring...\n"
                        },
                        {
                          "text": "‚úÖ API monitoring setup completed\n"
                        },
                        {
                          "text": "üìù Step 4: Testing CV upload with architectural migration...\n"
                        },
                        {
                          "text": "üì§ No existing CV found - proceeding with upload test...\n"
                        },
                        {
                          "text": "üìÅ Uploading CV from: /Users/filipmellqvist/CursorProjects/techrec/tests/fixtures/Filip_Mellqvist_CV.pdf\n"
                        },
                        {
                          "text": "üöÄ Starting upload process...\n"
                        },
                        {
                          "text": "üìû Intercepted CV upload API call\n"
                        },
                        {
                          "text": "‚úÖ Upload API response captured\n"
                        },
                        {
                          "text": "‚è≥ Waiting for CV processing to complete...\n"
                        },
                        {
                          "text": "‚è≥ Standard elements not found, checking if data was processed...\n"
                        },
                        {
                          "text": "üìä Proceeding with API response analysis (UI may be different than expected)\n"
                        },
                        {
                          "text": "üìù Step 5: Verifying architectural compliance...\n"
                        },
                        {
                          "text": "\nüèóÔ∏è === UPLOAD ARCHITECTURE ANALYSIS ===\n"
                        },
                        {
                          "text": "üìä Upload API Response Structure:\n"
                        },
                        {
                          "text": "  Success: N/A\n"
                        },
                        {
                          "text": "  Message: N/A\n"
                        },
                        {
                          "text": "  Analysis ID: N/A\n"
                        },
                        {
                          "text": "  Developer ID: N/A\n"
                        },
                        {
                          "text": "  ‚úÖ No CvAnalysis data in response: true\n"
                        },
                        {
                          "text": "  ‚úÖ Indicates proper profile sync: undefined\n"
                        },
                        {
                          "text": "üìù Step 6: Verifying data flow from proper tables...\n"
                        },
                        {
                          "text": "üìû Intercepted latest analysis API call\n"
                        },
                        {
                          "text": "‚úÖ Latest analysis API response captured\n"
                        },
                        {
                          "text": "\nüóÑÔ∏è === LATEST ANALYSIS ARCHITECTURE ANALYSIS ===\n"
                        },
                        {
                          "text": "üìä Latest Analysis API Response Structure:\n"
                        },
                        {
                          "text": "  ID: profile-6885f2dba62220e7f2389f1e\n"
                        },
                        {
                          "text": "  Has analysisResult: true\n"
                        },
                        {
                          "text": "  Has CV data: true\n"
                        },
                        {
                          "text": "  üìã Analysis Result Contents:\n"
                        },
                        {
                          "text": "    Contact Info: Present\n"
                        },
                        {
                          "text": "    About: Missing\n"
                        },
                        {
                          "text": "    Skills: 0 items\n"
                        },
                        {
                          "text": "    Experience: 0 items\n"
                        },
                        {
                          "text": "    Education: 0 items\n"
                        },
                        {
                          "text": "  ‚úÖ Uses proper table structure: [object Object]\n"
                        },
                        {
                          "text": "üìù Step 7: Verifying UI displays data from proper tables...\n"
                        },
                        {
                          "text": "üìù Step 8: Testing save functionality uses proper profile API...\n"
                        },
                        {
                          "text": "\nüìù Step 9: Final architectural compliance validation...\n"
                        },
                        {
                          "text": "\nüèÅ === FINAL ARCHITECTURE COMPLIANCE REPORT ===\n"
                        },
                        {
                          "text": "‚úÖ Upload uses proper tables (not CvAnalysis): true\n"
                        },
                        {
                          "text": "‚úÖ Fetch uses proper tables: true\n"
                        },
                        {
                          "text": "‚úÖ Save uses proper profile API: true\n"
                        },
                        {
                          "text": "‚úÖ API responses received: true\n"
                        },
                        {
                          "text": "\nüéØ Overall Architectural Compliance: PASSED\n"
                        },
                        {
                          "text": "üéâ Single Source of Truth architecture migration VERIFIED successfully!\n"
                        },
                        {
                          "text": "‚úÖ All architectural assertions passed\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-31T19:51:45.764Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "0fe47eef4277e9bc1ee5-b50ac1cf2905ad0e5d97",
              "file": "e2e/architecture/single-source-truth-verification.spec.ts",
              "line": 12,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-07-31T19:51:44.817Z",
    "duration": 34602.858,
    "expected": 1,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}